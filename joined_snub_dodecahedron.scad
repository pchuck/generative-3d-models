// Joined Snub Dodecahedron (laevo)
//   coords via: http://dmccooey.com/polyhedra/JoinedLsnubDodecahedron.html
//
scaling_factor = 10;

phi = (1 + sqrt(5)) / 2;
x = pow((phi + sqrt(phi - 5 /27)) / 2, 1 / 3) +
    pow(((phi - sqrt(phi - 5 / 27)) / 2), 1 / 3);

C0  = phi * sqrt(3 - (x^2)) / 2;
C1  = phi * sqrt((x - 1 - (1 / x)) * phi) / (2 * x);
C2  = x * phi * sqrt(3 - (x^2)) / 2;
C3  = phi * sqrt((x - 1 - (1 / x)) * phi) / 2;
C4  = (x^2) * phi * sqrt(3 - (x^2)) / 2;
C5  = x * phi * sqrt((x - 1 - (1 / x)) * phi) / 2;
C6  = phi * sqrt(1 - x + (1 + phi) / x) / 2;
C7  = sqrt(x * (x + phi) + 1) / (2 * x);
C8  = sqrt((x + 2) * phi + 2) / (2 * x);
C9  = phi * sqrt(x + 1 - phi) / 2;
C10 = sqrt(-(x^2) * (2 + phi) + x * (1 + 3 * phi) + 4) / 2;
C11 = (1 + phi) * sqrt(1 + (1 / x)) / (2 * x);
C12 = (x^2) * phi * sqrt((x - 1 - (1 / x)) * phi) / 2;
C13 = sqrt(2 + 3 * phi - 2 * x + (3 / x)) / 2;
C14 = sqrt((x^2)*(392 + 225*phi) + x*(249 + 670*phi) + (470 + 157*phi))/62;
C15 = phi * sqrt(x * (x + phi) + 1) / (2 * x);
C16 = x * phi * sqrt(1 - x + (1 + phi) / x) / 2;
C17 = phi * sqrt((x^2) + x + 1 + phi) / (2 * x);
C18 = sqrt((x + 2) * phi + 2) / 2;
C19 = x * sqrt(x * (1 + phi) - phi) / 2;
C20 = phi * sqrt((x^2) + 2 * x * phi + 2) / (2 * x);
C21 = sqrt((x^2) * (1 + 2 * phi) - phi) / 2;
C22 = phi * sqrt((x^2) + x) / 2;
C23 = (phi^3) * sqrt(x * (x + phi) + 1) / (2 * (x^2));
C24 = sqrt((x^2)*(617 + 842*phi) + x*(919 + 1589*phi) + (627 + 784*phi))/62;
C25 = (phi^2) * sqrt(x * (x + phi) + 1) / (2 * x);
C26 = phi * sqrt(x * (x + phi) + 1) / 2;

vertices = [
 [  C3,  -C2,  C26], [  C3,   C2, -C26], [ -C3,   C2,  C26], [ -C3,  -C2, -C26],
 [ C26,  -C3,   C2], [ C26,   C3,  -C2], [-C26,   C3,   C2], [-C26,  -C3,  -C2],
 [  C2, -C26,   C3], [  C2,  C26,  -C3], [ -C2,  C26,   C3], [ -C2, -C26,  -C3],
 [  C0,   C1,  C26], [  C0,  -C1, -C26], [ -C0,  -C1,  C26], [ -C0,   C1, -C26],
 [ C26,   C0,   C1], [ C26,  -C0,  -C1], [-C26,  -C0,   C1], [-C26,   C0,  -C1],
 [  C1,  C26,   C0], [  C1, -C26,  -C0], [ -C1, -C26,   C0], [ -C1,  C26,  -C0],
 [ 0.0,   C7,  C25], [ 0.0,   C7, -C25], [ 0.0,  -C7,  C25], [ 0.0,  -C7, -C25],
 [ C25,  0.0,   C7], [ C25,  0.0,  -C7], [-C25,  0.0,   C7], [-C25,  0.0,  -C7],
 [  C7,  C25,  0.0], [  C7, -C25,  0.0], [ -C7,  C25,  0.0], [ -C7, -C25,  0.0],
 [  C4,   C5,  C25], [  C4,  -C5, -C25], [ -C4,  -C5,  C25], [ -C4,   C5, -C25],
 [ C25,   C4,   C5], [ C25,  -C4,  -C5], [-C25,  -C4,   C5], [-C25,   C4,  -C5],
 [  C5,  C25,   C4], [  C5, -C25,  -C4], [ -C5, -C25,   C4], [ -C5,  C25,  -C4],
 [ C14,  0.0,  C24], [ C14,  0.0, -C24], [-C14,  0.0,  C24], [-C14,  0.0, -C24],
 [ C24,  C14,  0.0], [ C24, -C14,  0.0], [-C24,  C14,  0.0], [-C24, -C14,  0.0],
 [ 0.0,  C24,  C14], [ 0.0,  C24, -C14], [ 0.0, -C24,  C14], [ 0.0, -C24, -C14],
 [  C4,  -C8,  C23], [  C4,   C8, -C23], [ -C4,   C8,  C23], [ -C4,  -C8, -C23],
 [ C23,  -C4,   C8], [ C23,   C4,  -C8], [-C23,   C4,   C8], [-C23,  -C4,  -C8],
 [  C8, -C23,   C4], [  C8,  C23,  -C4], [ -C8,  C23,   C4], [ -C8, -C23,  -C4],
 [  C0, -C16,  C22], [  C0,  C16, -C22], [ -C0,  C16,  C22], [ -C0, -C16, -C22],
 [ C22,  -C0,  C16], [ C22,   C0, -C16], [-C22,   C0,  C16], [-C22,  -C0, -C16],
 [ C16, -C22,   C0], [ C16,  C22,  -C0], [-C16,  C22,   C0], [-C16, -C22,  -C0],
 [  C3,  C13,  C22], [  C3, -C13, -C22], [ -C3, -C13,  C22], [ -C3,  C13, -C22],
 [ C22,   C3,  C13], [ C22,  -C3, -C13], [-C22,  -C3,  C13], [-C22,   C3, -C13],
 [ C13,  C22,   C3], [ C13, -C22,  -C3], [-C13, -C22,   C3], [-C13,  C22,  -C3],
 [ C12,  -C9,  C21], [ C12,   C9, -C21], [-C12,   C9,  C21], [-C12,  -C9, -C21],
 [ C21, -C12,   C9], [ C21,  C12,  -C9], [-C21,  C12,   C9], [-C21, -C12,  -C9],
 [  C9, -C21,  C12], [  C9,  C21, -C12], [ -C9,  C21,  C12], [ -C9, -C21, -C12],
 [ C10,  C11,  C21], [ C10, -C11, -C21], [-C10, -C11,  C21], [-C10,  C11, -C21],
 [ C21,  C10,  C11], [ C21, -C10, -C11], [-C21, -C10,  C11], [-C21,  C10, -C11],
 [ C11,  C21,  C10], [ C11, -C21, -C10], [-C11, -C21,  C10], [-C11,  C21, -C10],
 [  C6, -C17,  C20], [  C6,  C17, -C20], [ -C6,  C17,  C20], [ -C6, -C17, -C20],
 [ C20,  -C6,  C17], [ C20,   C6, -C17], [-C20,   C6,  C17], [-C20,  -C6, -C17],
 [ C17, -C20,   C6], [ C17,  C20,  -C6], [-C17,  C20,   C6], [-C17, -C20,  -C6],
 [ C18,   C6,  C19], [ C18,  -C6, -C19], [-C18,  -C6,  C19], [-C18,   C6, -C19],
 [ C19,  C18,   C6], [ C19, -C18,  -C6], [-C19, -C18,   C6], [-C19,  C18,  -C6],
 [  C6,  C19,  C18], [  C6, -C19, -C18], [ -C6, -C19,  C18], [ -C6,  C19, -C18],
 [ C15,  C15,  C15], [ C15,  C15, -C15], [ C15, -C15,  C15], [ C15, -C15, -C15],
 [-C15,  C15,  C15], [-C15,  C15, -C15], [-C15, -C15,  C15], [-C15, -C15, -C15]
];

faces = [
  [ 48,   0,  60,  96], [ 48,  96, 124,  76], [ 48,  76,  88, 132],
  [ 48, 132, 108,  36], [ 48,  36,  12,   0],
  [ 49,   1,  61,  97], [ 49,  97, 125,  77], [ 49,  77,  89, 133],
  [ 49, 133, 109,  37], [ 49,  37,  13,   1],
  [ 50,   2,  62,  98], [ 50,  98, 126,  78], [ 50,  78,  90, 134],
  [ 50, 134, 110,  38], [ 50,  38,  14,   2],
  [ 51,   3,  63,  99], [ 51,  99, 127,  79], [ 51,  79,  91, 135],
  [ 51, 135, 111,  39], [ 51,  39,  15,   3],
  [ 52,   5,  65, 101], [ 52, 101, 129,  81], [ 52,  81,  92, 136],
  [ 52, 136, 112,  40], [ 52,  40,  16,   5],
  [ 53,   4,  64, 100], [ 53, 100, 128,  80], [ 53,  80,  93, 137],
  [ 53, 137, 113,  41], [ 53,  41,  17,   4],
  [ 54,   6,  66, 102], [ 54, 102, 130,  82], [ 54,  82,  95, 139],
  [ 54, 139, 115,  43], [ 54,  43,  19,   6],
  [ 55,   7,  67, 103], [ 55, 103, 131,  83], [ 55,  83,  94, 138],
  [ 55, 138, 114,  42], [ 55,  42,  18,   7],
  [ 56,  10,  70, 106], [ 56, 106, 122,  74], [ 56,  74,  84, 140],
  [ 56, 140, 116,  44], [ 56,  44,  20,  10],
  [ 57,   9,  69, 105], [ 57, 105, 121,  73], [ 57,  73,  87, 143],
  [ 57, 143, 119,  47], [ 57,  47,  23,   9],
  [ 58,   8,  68, 104], [ 58, 104, 120,  72], [ 58,  72,  86, 142],
  [ 58, 142, 118,  46], [ 58,  46,  22,   8],
  [ 59,  11,  71, 107], [ 59, 107, 123,  75], [ 59,  75,  85, 141],
  [ 59, 141, 117,  45], [ 59,  45,  21,  11],
  [ 24,   2,  12,  36], [ 24,  36,  84,  74], [ 24,  74,  62,   2],
  [ 25,   1,  15,  39], [ 25,  39,  87,  73], [ 25,  73,  61,   1],
  [ 26,   0,  14,  38], [ 26,  38,  86,  72], [ 26,  72,  60,   0],
  [ 27,   3,  13,  37], [ 27,  37,  85,  75], [ 27,  75,  63,   3],
  [ 28,   4,  16,  40], [ 28,  40,  88,  76], [ 28,  76,  64,   4],
  [ 29,   5,  17,  41], [ 29,  41,  89,  77], [ 29,  77,  65,   5],
  [ 30,   6,  18,  42], [ 30,  42,  90,  78], [ 30,  78,  66,   6],
  [ 31,   7,  19,  43], [ 31,  43,  91,  79], [ 31,  79,  67,   7],
  [ 32,   9,  20,  44], [ 32,  44,  92,  81], [ 32,  81,  69,   9],
  [ 33,   8,  21,  45], [ 33,  45,  93,  80], [ 33,  80,  68,   8],
  [ 34,  10,  23,  47], [ 34,  47,  95,  82], [ 34,  82,  70,  10],
  [ 35,  11,  22,  46], [ 35,  46,  94,  83], [ 35,  83,  71,  11],
  [144, 132, 112, 136], [144, 136, 116, 140], [144, 140, 108, 132],
  [145,  97, 121, 105], [145, 105, 129, 101], [145, 101, 125,  97],
  [146,  96, 120, 104], [146, 104, 128, 100], [146, 100, 124,  96],
  [147, 133, 113, 137], [147, 137, 117, 141], [147, 141, 109, 133],
  [148,  98, 122, 106], [148, 106, 130, 102], [148, 102, 126,  98],
  [149, 135, 115, 139], [149, 139, 119, 143], [149, 143, 111, 135],
  [150, 134, 114, 138], [150, 138, 118, 142], [150, 142, 110, 134],
  [151,  99, 123, 107], [151, 107, 131, 103], [151, 103, 127,  99],
  [  2,  14,   0,  12], [  3,  15,   1,  13],
  [  4,  17,   5,  16], [  7,  18,   6,  19],
  [  8,  22,  11,  21], [  9,  23,  10,  20],
  [ 72, 120,  96,  60], [ 73, 121,  97,  61],
  [ 74, 122,  98,  62], [ 75, 123,  99,  63],
  [ 76, 124, 100,  64], [ 77, 125, 101,  65],
  [ 78, 126, 102,  66], [ 79, 127, 103,  67],
  [ 80, 128, 104,  68], [ 81, 129, 105,  69],
  [ 82, 130, 106,  70], [ 83, 131, 107,  71],
  [ 84,  36, 108, 140], [ 85,  37, 109, 141],
  [ 86,  38, 110, 142], [ 87,  39, 111, 143],
  [ 88,  40, 112, 132], [ 89,  41, 113, 133],
  [ 90,  42, 114, 134], [ 91,  43, 115, 135],
  [ 92,  44, 116, 136], [ 93,  45, 117, 137],
  [ 94,  46, 118, 138], [ 95,  47, 119, 139]
];

scale(scaling_factor) {
  polyhedron(points=vertices, faces=faces, convexity=20);
}
