// 120-sided Disdyakis Triacontahedron
// coords via http://dmccooey.com/polyhedra/DisdyakisTriacontahedron.txt
// rendering method adapted from thingiverse script by unknown author
//
txt_depth = .12;
txt_size = .425;
txt_font = "Arial:style=Bold";
diam = 50; // sets the diameter (dist from one vertex to the vertex opposite) 
minko = 0.2; // chamfer the edges [0 = disabled]
roll = 0.3; // further round, intersection with a smaller sphere [0 = disabled]
minkfn = 80; // $fn for chamfer and the sphere

// randomly ordered with 3-digit numbers arranged length-wise
labels = ["29", "47", "80", "43", "99.", "109", "79", "74", "18", "32", "51", "9.", "49", "40", "108", "102", "57", "71", "98", "34", "77", "97", "46", "3", "104", "112", "25", "89", "67", "12", "63", "10", "85", "58", "118", "107", "24", "28", "81", "84", "50", "42", "53", "1", "35", "55", "72", "116", "69", "7", "45", "61", "101", "86", "60", "36", "8", "115", "64", "13", "37", "56", "119", "70", "41", "2", "66.", "114", "88", "14", "27", "16", "96", "62", "83", "76", "78", "82", "17", "23", "113", "87", "22", "93", "4", "92", "73", "15", "90", "48", "75", "5", "11", "21", "39", "20", "26", "59", "33", "110", "105", "19", "91", "30", "111", "106", "94", "54", "44", "120", "117", "52", "68", "95", "103", "100", "65", "38", "6.", "31"];

// constants
C0 = 3 *    (15 + sqrt(5)) / 44; // 1.17518645301134929748244365923
C1 =         (5 - sqrt(5)) /  2; // 1.38196601125010515179541316563
C2 = 3 * (5 + 4 * sqrt(5)) / 22; // 1.901491624090794379859549273853
C3 = 3 * (5 + 1 * sqrt(5)) / 10; // 2.17082039324993690892275210062
C4 =              sqrt(5);       // 2.23606797749978969640917366873
C5 =   (75 + 27 * sqrt(5)) / 44; // 3.07667807710214367734199293309
C6 =   (15 +  9 * sqrt(5)) / 10; // 3.51246117974981072676825630186
C7 =   ( 5 +  1 * sqrt(5)) /  2; // 3.61803398874989484820458683437
C8 = 3 * (5 + 4 * sqrt(5)) / 11; // 3.80298324818158875971909854771

ordi = sqrt(C2 * C2 + C4 * C4 + C6 * C6) + minko; // original diameter
scafa = diam * 0.5 / ordi; // scale factor

vertices = [
    [0.0, 0.0,  C8],
    [0.0, 0.0, -C8],
    [ C8, 0.0, 0.0],
    [-C8, 0.0, 0.0],
    [0.0,  C8, 0.0],
    [0.0, -C8, 0.0],
    [0.0,  C1,  C7],
    [0.0,  C1, -C7],
    [0.0, -C1,  C7],
    [0.0, -C1, -C7],
    [ C7, 0.0,  C1],
    [ C7, 0.0, -C1],
    [-C7, 0.0,  C1],
    [-C7, 0.0, -C1],
    [ C1,  C7, 0.0],
    [ C1, -C7, 0.0],
    [-C1,  C7, 0.0],
    [-C1, -C7, 0.0],
    [ C3, 0.0,  C6],
    [ C3, 0.0, -C6],
    [-C3, 0.0,  C6],
    [-C3, 0.0, -C6],
    [ C6,  C3, 0.0],
    [ C6, -C3, 0.0],
    [-C6,  C3, 0.0],
    [-C6, -C3, 0.0],
    [0.0,  C6,  C3],
    [0.0,  C6, -C3],
    [0.0, -C6,  C3],
    [0.0, -C6, -C3],
    [ C0,  C2,  C5],
    [ C0,  C2, -C5],
    [ C0, -C2,  C5],
    [ C0, -C2, -C5],
    [-C0,  C2,  C5],
    [-C0,  C2, -C5],
    [-C0, -C2,  C5],
    [-C0, -C2, -C5],
    [ C5,  C0,  C2],
    [ C5,  C0, -C2],
    [ C5, -C0,  C2],
    [ C5, -C0, -C2],
    [-C5,  C0,  C2],
    [-C5,  C0, -C2],
    [-C5, -C0,  C2],
    [-C5, -C0, -C2],
    [ C2,  C5,  C0],
    [ C2,  C5, -C0],
    [ C2, -C5,  C0],
    [ C2, -C5, -C0],
    [-C2,  C5,  C0],
    [-C2,  C5, -C0],
    [-C2, -C5,  C0],
    [-C2, -C5, -C0],
    [ C4,  C4,  C4],
    [ C4,  C4, -C4],
    [ C4, -C4,  C4],
    [ C4, -C4, -C4],
    [-C4,  C4,  C4],
    [-C4,  C4, -C4],
    [-C4, -C4,  C4],
    [-C4, -C4, -C4]
];

faces =
[
    [ 18,  0,  8 ],
    [ 18,  8, 32 ],
    [ 18, 32, 56 ],
    [ 18, 56, 40 ],
    [ 18, 40, 10 ],
    [ 18, 10, 38 ],
    [ 18, 38, 54 ],
    [ 18, 54, 30 ],
    [ 18, 30,  6 ],
    [ 18,  6,  0 ],
    [ 19,  1,  7 ],
    [ 19,  7, 31 ],
    [ 19, 31, 55 ],
    [ 19, 55, 39 ],
    [ 19, 39, 11 ],
    [ 19, 11, 41 ],
    [ 19, 41, 57 ],
    [ 19, 57, 33 ],
    [ 19, 33,  9 ],
    [ 19,  9,  1 ],
    [ 20,  0,  6 ],
    [ 20,  6, 34 ],
    [ 20, 34, 58 ],
    [ 20, 58, 42 ],
    [ 20, 42, 12 ],
    [ 20, 12, 44 ],
    [ 20, 44, 60 ],
    [ 20, 60, 36 ],
    [ 20, 36,  8 ],
    [ 20,  8,  0 ],
    [ 21,  1,  9 ],
    [ 21,  9, 37 ],
    [ 21, 37, 61 ],
    [ 21, 61, 45 ],
    [ 21, 45, 13 ],
    [ 21, 13, 43 ],
    [ 21, 43, 59 ],
    [ 21, 59, 35 ],
    [ 21, 35,  7 ],
    [ 21,  7,  1 ],
    [ 22,  2, 11 ],
    [ 22, 11, 39 ],
    [ 22, 39, 55 ],
    [ 22, 55, 47 ],
    [ 22, 47, 14 ],
    [ 22, 14, 46 ],
    [ 22, 46, 54 ],
    [ 22, 54, 38 ],
    [ 22, 38, 10 ],
    [ 22, 10,  2 ],
    [ 23,  2, 10 ],
    [ 23, 10, 40 ],
    [ 23, 40, 56 ],
    [ 23, 56, 48 ],
    [ 23, 48, 15 ],
    [ 23, 15, 49 ],
    [ 23, 49, 57 ],
    [ 23, 57, 41 ],
    [ 23, 41, 11 ],
    [ 23, 11,  2 ],
    [ 24,  3, 12 ],
    [ 24, 12, 42 ],
    [ 24, 42, 58 ],
    [ 24, 58, 50 ],
    [ 24, 50, 16 ],
    [ 24, 16, 51 ],
    [ 24, 51, 59 ],
    [ 24, 59, 43 ],
    [ 24, 43, 13 ],
    [ 24, 13,  3 ],
    [ 25,  3, 13 ],
    [ 25, 13, 45 ],
    [ 25, 45, 61 ],
    [ 25, 61, 53 ],
    [ 25, 53, 17 ],
    [ 25, 17, 52 ],
    [ 25, 52, 60 ],
    [ 25, 60, 44 ],
    [ 25, 44, 12 ],
    [ 25, 12,  3 ],
    [ 26,  4, 16 ],
    [ 26, 16, 50 ],
    [ 26, 50, 58 ],
    [ 26, 58, 34 ],
    [ 26, 34,  6 ],
    [ 26,  6, 30 ],
    [ 26, 30, 54 ],
    [ 26, 54, 46 ],
    [ 26, 46, 14 ],
    [ 26, 14,  4 ],
    [ 27,  4, 14 ],
    [ 27, 14, 47 ],
    [ 27, 47, 55 ],
    [ 27, 55, 31 ],
    [ 27, 31,  7 ],
    [ 27,  7, 35 ],
    [ 27, 35, 59 ],
    [ 27, 59, 51 ],
    [ 27, 51, 16 ],
    [ 27, 16,  4 ],
    [ 28,  5, 15 ],
    [ 28, 15, 48 ],
    [ 28, 48, 56 ],
    [ 28, 56, 32 ],
    [ 28, 32,  8 ],
    [ 28,  8, 36 ],
    [ 28, 36, 60 ],
    [ 28, 60, 52 ],
    [ 28, 52, 17 ],
    [ 28, 17,  5 ],
    [ 29,  5, 17 ],
    [ 29, 17, 53 ],
    [ 29, 53, 61 ],
    [ 29, 61, 37 ],
    [ 29, 37,  9 ],
    [ 29,  9, 33 ],
    [ 29, 33, 57 ],
    [ 29, 57, 49 ],
    [ 29, 49, 15 ],
    [ 29, 15,  5 ]
];

function add3(v, i = 0, r) = 
    i < len(v) ? 
        i == 0 ?
            add3(v, 1, v[0]) :
            add3(v, i + 1, r + v[i]) :
        r;

// returns list of the coordinates of the vertices on this face
function facecoord(n) = [
    for(i = [0 : len(faces[n]) - 1])
        vertices[faces[n][i]]
];

module facetext(vert,txt) {
    bar = add3(vert) / len(vert); // barycentre
    length = norm(bar);           // radial distance
    b = acos(bar.z / length);     // inclination angle
    c = atan2(bar.y, bar.x);      // azimuthal angle
    rotate([0, b, c])
        translate([0, 0, length + minko])
            linear_extrude(txt_depth, center=true)
                text(text=txt, size=txt_size, font=txt_font,
                     halign="center", valign="center");
}

// basic shape rendering
/*
translate([0, 0, 23.78])
    scale([10, 10, 10])
        rotate([0, 11.6, 0])
            polyhedron(points=vertices, faces=faces, convexity=20);
*/

// scaled with chamfering and digits
scale(scafa) {
    difference() {
        intersection() {
            minkowski($fn=minkfn) {
                polyhedron(points=vertices, faces=faces, convexity=20);
                sphere(minko);
            }
            sphere(ordi - roll, $fn=minkfn);
        }
        for(i=[0:len(faces)-1])
            facetext(facecoord(i), labels[i]);
    }
}
